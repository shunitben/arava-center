<?php

/**
 * Implements hook_menu().
 * @return mixed
 */
function arava_admin_menu() {

  $items['admin/arava-admin'] = array(
    'title' => t('Arava Admin'),
    'page callback' => 'arava_admin_page',
    'access arguments' => array('view arava administration reports'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'arava_admin.admin.inc'
  );

  $items['admin/admin-presence'] = array(
    'title' => t('Administer Presence'),
    'page callback' => 'arava_admin_presence_page',
    'access arguments' => array('view arava administration reports'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'arava_admin.presence.inc'
  );

  $items['admin/admin-meals'] = array(
    'title' => t('Administer Meals'),
    'page callback' => 'arava_admin_meals_page',
    'access arguments' => array('view arava administration reports'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'arava_admin.meals.inc'
  );

  $items['admin/send-emails'] = array(
    'title' => t('Send Emails'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('arava_admin_send_emails_form'),
    'access arguments' => array('view arava administration reports'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'arava_admin.send_emails.inc'
  );

//  $items['admin/admin-registration'] = array(
//    'title' => t('Administer Registration'),
//    'page callback' => 'arava_admin_registration_page',
//    'access arguments' => array('administer menu'),
//    'type' => MENU_NORMAL_ITEM,
//    'file' => 'arava_admin.registration.inc'
//  );


  return $items;
}

/**
 * Implements hook_permission().
 */
function arava_admin_permission() {
  return array(
    'view arava administration reports' => array(
      'title' => t('View Arava administration reports'),
    )
  );
}

function arava_admin_preprocess_page(&$vars) {
  if (arg(0) == 'user') {
    if (user_access('administer nodes')) {
      module_load_include('inc', 'arava_registration', 'MySemesterAPI.class');
      $mySemesterAPI = new MySemesterAPI(arg(1));
      $mySemesterId = $mySemesterAPI->getMySemesterId();
      drupal_set_message(l(t('Edit user\'s semester'), 'node/' . $mySemesterId . '/edit'), 'status');
    }
  }
  if (!empty($vars['node']) && $vars['node']->type == 'my_semester') {
    if (user_access('administer nodes')) {
      $uid = $vars['node']->field_user[LANGUAGE_NONE][0]['target_id'];
      drupal_set_message(l(t('Edit user\'s personal details'), 'user/' . $uid . '/edit'), 'status');
    }
  }
}

function view_get_link_to_send_emails($view) {
  return l(t('send emails'),
          'admin/send-emails',
          array('query' => array(
            'view' => $view->name,
            'display' => $view->current_display,
            'args' => $view->args))
          );
}


function arava_admin_mail($key, &$message, $params) {
  switch ($key) {
    case 'send_email':
      $message['subject'] = $params['subject'];
      $message['body'] = $params['body'];
      break;
  }
}